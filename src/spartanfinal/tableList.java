/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spartanfinal;

import com.esri.core.geometry.Geometry;
import com.esri.core.symbol.Symbol;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author hchapa
 */
public class tableList extends javax.swing.JFrame {

    /**
     * Creates new form tableList
     */
     private javax.swing.table.DefaultTableModel model;
     private ArrayList<ObjectData> listing = new ArrayList();
     private ArrayList<ObjectParcel> listing2 = new ArrayList();
     private ArrayList<ObjectDirectory> listing3 = new ArrayList();
    public tableList() {
        initComponents();
        this.setTitle("Appraisal Data");
        icon.setIcon(new javax.swing.ImageIcon("img/google_blob_50.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customerT = new javax.swing.JTable();
        icon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        customerT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OBJECTID", "CUSTOMER NAME", "ADDRESS", "MSAG COMM", "DEPARTMENT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerT);

        icon.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\google_blob_50.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(icon)
                .addGap(0, 1148, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(icon)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable customerT;
    private javax.swing.JLabel icon;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
public void setList(ArrayList<ObjectData> t)
{
    listing.addAll(t);
    model = (javax.swing.table.DefaultTableModel)customerT.getModel();
    for(int i = 0; i < t.size(); i++)
    {
        model.addRow(new Object[]{t.get(i).getId(), t.get(i).getFullName(), t.get(i).getFullAddress(), t.get(i).getMsageCom(), t.get(i).getStatus()});
    }
    
    
}
public Geometry getGeometry(int pos)
{
    return listing.get(pos).getGeometry();
}
public Geometry getGeometry2(int pos)
{
    return listing2.get(pos).getGeometry();
}
public Symbol getSymbol(int pos)
{
    return listing2.get(pos).getSymbol();
}
public int getsize(){return listing.size();}
public void addNewList(ArrayList<ObjectData> t)
{
   // System.out.println("old list " + listing.size());
    model = (javax.swing.table.DefaultTableModel)customerT.getModel();
    for(int i = 0; i < t.size(); i++)
    {
        model.addRow(new Object[]{t.get(i).getId(), t.get(i).getFullName(), t.get(i).getFullAddress(), t.get(i).getMsageCom(), t.get(i).getStatus()});
    }
    listing.addAll(t);
    for(int i = 0; i < listing.size();i++)
    {
       // System.out.println("List printing out " + listing.get(i).getId());
    }
}
public void setUpNewColums()
{
    javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel()
    {
         public boolean isCellEditable(int row, int column)
         {
                return false;
          }
    };
    customerT.setModel(model);
    model.addColumn("Owner Name");
    model.addColumn("Tax Id");
    model.addColumn("Prop Id");
    model.addColumn("Legal");
    model.addColumn("Situs"); 
}
public void setUpColumns()
{
    javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel()
    {
         public boolean isCellEditable(int row, int column)
         {
                return false;
          }
    };
    customerT.setModel(model);
    model.addColumn("Path");
    model.addColumn("File Name");
   
}
public void addData(ArrayList<ObjectParcel> t)
{
    listing2 = t;
    model = (javax.swing.table.DefaultTableModel)customerT.getModel();
    for(int i = 0; i < t.size(); i++)
    {
        //System.out.println("Adding data");
        model.addRow(new Object[]{t.get(i).getOwner(), t.get(i).getGeo(), t.get(i).getProp(), t.get(i).getLegal(), t.get(i).getSitus()});
    }
    
}
public void addDirecData(ArrayList<ObjectDirectory> t)
{
    listing3 = t;
    model = (javax.swing.table.DefaultTableModel)customerT.getModel();
    for(int i = 0; i < t.size(); i++)
    {
        model.addRow(new Object[]{t.get(i).getPath(), t.get(i).getLocation()});
    }
}
public void addAppendDirectory(ArrayList<ObjectDirectory> t)
{
    listing3.addAll(t);
    System.out.println("Size of the list is " + listing3.size());
     model = (javax.swing.table.DefaultTableModel)customerT.getModel();
    for(int i = 0; i < t.size(); i++)
    {
        model.addRow(new Object[]{t.get(i).getPath(), t.get(i).getLocation()});
    }
}
public void clearData()
{
     DefaultTableModel dtm = (DefaultTableModel) customerT.getModel();
     dtm.setRowCount(0);
     listing.clear();
     listing2.clear();
     listing3.clear();
}
public String getPath(int pos)
{
    return listing3.get(pos).getPath();
}

        
}
