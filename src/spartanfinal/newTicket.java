/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spartanfinal;

import com.esri.core.geometry.Geometry;
import com.esri.core.map.Graphic;
import com.esri.map.ArcGISFeatureLayer;
import com.esri.map.GraphicsLayer;
import com.sun.glass.events.KeyEvent;

import javax.swing.AbstractAction;
import java.awt.Dimension;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import javax.swing.KeyStroke;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;


import javax.swing.text.MaskFormatter;
import tray.notification.TrayNotification;



public class newTicket extends javax.swing.JFrame {

    /**
     * Creates new form newTicket
     */
    private ArcGISFeatureLayer spartanLayer;
    public ArrayList<ObjectData> list = new ArrayList();
    private javax.swing.table.DefaultTableModel model;
    public int position;
    public GraphicsLayer layer = new GraphicsLayer();
    public int GraphicsId = 0;
    private Dimension dim;
    private dialogAlt dialog;
    private parcelSearch searchparcel = new parcelSearch();
    private TrayNotification tray;
    
    private Timer t;
    public newTicket(ImageIcon img, String id, ArcGISFeatureLayer layer) {
        searchparcel.setFeatureLayer(layer);

        initComponents();

        progress.setVisible(false);
        model = (javax.swing.table.DefaultTableModel) attachmentT.getModel();
        dim = Toolkit.getDefaultToolkit().getScreenSize();
        list.add(new ObjectData(id));
        position = list.size() - 1;
        spartanLayer = layer;
        idNumber.setText(id);
        this.setTitle("New Address Request");
        this.setLocation(dim.width/2-this.getSize().width/2, (dim.height/2-this.getSize().height/2) - 20);
        this.setIconImage(img.getImage());
        imgIcon.setIcon(new javax.swing.ImageIcon("img/create_new_file.png"));
        zoom.setIcon(new javax.swing.ImageIcon("img/center_direction_50.png"));
        zoom.setText("ZOOM");
        sub.setIcon(new javax.swing.ImageIcon("img/document_folder_50.png"));
        more.setIcon(new javax.swing.ImageIcon("img/cell_phone_32.png"));
        attach.setIcon(new javax.swing.ImageIcon("img/attach_32.png"));
        save.setIcon(new javax.swing.ImageIcon("img/save_32.png"));
        previous.setIcon(new javax.swing.ImageIcon("img/previous_32.png"));
        previous.setText("Prev");
        next.setIcon(new javax.swing.ImageIcon("img/next_32.png"));
        userF.setText("");
        userF.setIcon(new javax.swing.ImageIcon("img/find_user_50.png"));
        next.setText("Next");
        delete.setIcon(new javax.swing.ImageIcon("img/delete_32.png"));
       
        message.setText("");
        
        attach.getInputMap(JComponent.WHEN_FOCUSED).put(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK), "Open");
        attach.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK), "Open");
        
       
      
        
        attach.getActionMap().put("Open", new actionClick());
      
       
        
        attach.addActionListener(new actionClick());
       dialog = new dialogAlt();
    }
    public int [] getPosAndSize()
    {
        int [] i = new int[2];
        i[0] = position;
        i[1] = list.size();
        return i;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imgIcon = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idNumber = new javax.swing.JLabel();
        attach = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        fnameL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        try{
            mainT = new javax.swing.JFormattedTextField(new MaskFormatter("'(###')' ###'-####"));
            try{
                alt1 = new javax.swing.JFormattedTextField(new MaskFormatter("'(###')' ###'-####"));
                more = new javax.swing.JButton();
                jLabel5 = new javax.swing.JLabel();
                ofname = new javax.swing.JTextField();
                jLabel6 = new javax.swing.JLabel();
                olname = new javax.swing.JTextField();
                jLabel7 = new javax.swing.JLabel();
                subdivision = new javax.swing.JTextField();
                jLabel8 = new javax.swing.JLabel();
                block = new javax.swing.JTextField();
                jLabel9 = new javax.swing.JLabel();
                jLabel10 = new javax.swing.JLabel();
                jLabel11 = new javax.swing.JLabel();
                jLabel12 = new javax.swing.JLabel();
                taxT = new javax.swing.JTextField();
                propertyT = new javax.swing.JTextField();
                streetT = new javax.swing.JTextField();
                intersectionT = new javax.swing.JTextField();
                jLabel14 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                description = new javax.swing.JTextArea();
                jLabel15 = new javax.swing.JLabel();
                jScrollPane2 = new javax.swing.JScrollPane();
                notes = new javax.swing.JTextArea();
                jLabel13 = new javax.swing.JLabel();
                lotnum = new javax.swing.JTextField();
                jPanel2 = new javax.swing.JPanel();
                jScrollPane4 = new javax.swing.JScrollPane();
                attachmentT = new javax.swing.JTable();
                save = new javax.swing.JButton();
                next = new javax.swing.JButton();
                previous = new javax.swing.JButton();
                delete = new javax.swing.JButton();
                progress = new javax.swing.JProgressBar();
                zoom = new javax.swing.JButton();
                jLabel16 = new javax.swing.JLabel();
                message = new javax.swing.JLabel();
                userF = new javax.swing.JButton();
                sub = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

                imgIcon.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\create_new_file.png")); // NOI18N

                jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
                jLabel3.setText("Ticket Number: ");

                idNumber.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
                idNumber.setForeground(new java.awt.Color(255, 51, 51));

                attach.setText("Attachments");

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Customer Information"));
                jPanel1.setPreferredSize(new java.awt.Dimension(758, 350));

                fnameL.setText("First Name");

                jLabel1.setText("Last Name");

                jLabel2.setText("9-1-1 Telephone");

                jLabel4.setText("ALT Telephone");

            }catch(Exception e)
            {
            }

        }catch(Exception e)
        {

        }

        more.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\cell_phone_32.png")); // NOI18N
        more.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        more.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreActionPerformed(evt);
            }
        });

        jLabel5.setText("Owner First Name");

        jLabel6.setText("Owner Last Name");

        jLabel7.setText("Subdivision");

        jLabel8.setText("Block Number");

        jLabel9.setText("Tax Account");

        jLabel10.setText("Property ID");

        jLabel11.setText("Street");

        jLabel12.setText("Intersection");

        jLabel14.setText("Building Description");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        jLabel15.setText("Notes");

        notes.setColumns(20);
        notes.setRows(5);
        jScrollPane2.setViewportView(notes);

        jLabel13.setText("Lot Number");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12)
                                    .addComponent(intersectionT, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lotnum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(taxT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(102, 102, 102)
                                        .addComponent(jLabel10))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(ofname, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(olname))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)
                                            .addComponent(fnameL))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel6)
                                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(95, 95, 95)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(subdivision)
                                            .addComponent(mainT)
                                            .addComponent(jLabel7)
                                            .addComponent(propertyT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(streetT, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                                .addComponent(jLabel11))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel8)
                                                .addComponent(block, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                                .addComponent(alt1)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(more, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(17, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(fnameL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(more, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mainT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(alt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ofname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(olname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subdivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(block, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taxT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(propertyT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lotnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streetT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(intersectionT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Attachments"));

        attachmentT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "TYPE", "ICON"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attachmentT.setRowHeight(30);
        attachmentT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attachmentTMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(attachmentT);
        if (attachmentT.getColumnModel().getColumnCount() > 0) {
            attachmentT.getColumnModel().getColumn(3).setCellRenderer(new MyRenderer() );
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176))
        );

        save.setText("Save");

        next.setText("jButton1");
        next.setPreferredSize(new java.awt.Dimension(80, 30));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        previous.setText("jButton2");
        previous.setPreferredSize(new java.awt.Dimension(80, 30));
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        delete.setLabel("Delete");

        progress.setIndeterminate(true);

        zoom.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\center_direction_50.png")); // NOI18N
        zoom.setText("jButton1");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel16.setText("Message:");

        message.setForeground(new java.awt.Color(255, 51, 51));
        message.setText("jLabel17");

        userF.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\find_user_50.png")); // NOI18N
        userF.setText("jButton1");

        sub.setIcon(new javax.swing.ImageIcon("911dbastr\\911_DEPT\\04_SYSTEMS\\00_STAFF_PROFILES\\hchapa\\Documents\\NetBeansProjects\\spartan\\img\\document_folder_50.png")); // NOI18N
        sub.setText("Subdivision");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imgIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(message)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(attach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(previous, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(zoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgIcon)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(idNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(message))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(attach)
                        .addGap(2, 2, 2)
                        .addComponent(save)
                        .addGap(3, 3, 3)
                        .addComponent(delete)
                        .addGap(4, 4, 4)
                        .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userF)
                        .addGap(18, 18, 18)
                        .addComponent(sub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nextActionPerformed

    private void attachmentTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachmentTMouseClicked
        // TODO add your handling code here:
        
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON3)
        {
            dbConnect con = new dbConnect();
            if(con.deleteAttachment(attachmentT.getValueAt(attachmentT.getSelectedRow(), 0).toString()) > 0)
            {
                model.removeRow(attachmentT.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Attachment deleted");
            }else{
                JOptionPane.showMessageDialog(null, "Sorry, couldn't delete your attachment?");
                
            }
            
            
            return;
        }
        else if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1 && evt.getClickCount() > 1) //Click once to view the attachments...
        {
          
           this.startProgressBar();
           if(new File("d:/").exists())
               if(!new File("d:/download").exists())
               {
                   new File("d:/download").mkdir();
                    try{
                    dbConnect con = new dbConnect();
                    ProcessFiles data = con.getBlobInfo(attachmentT.getValueAt(attachmentT.getSelectedRow(), 0).toString());
                    
                    //Here is oging to create the file...
                    if(!new File("d:/download/"+ data.getName()).exists())
                    {
                        File f = new File("d:/download/"+ data.getName());
                       
                        data.writeByteArraysToFile("d:/download/" + data.getName(),  data.decodeBase64(data.getBase64(), data.getName()));
                        data.openFile(f);
                        
                    }
                    else{
                        new File("d:/download/"+data.getName()).delete();
                        File f = new File("d:/download/"+ data.getName());
                        
                        data.writeByteArraysToFile("d:/download/" + data.getName(),  data.decodeBase64(data.getBase64(), data.getName()));
                        data.openFile(f);
                    }
                    
                   }catch(Exception error)
                   {
                        JOptionPane.showMessageDialog(null, error);
                   }
               }
               else{
                   //check if the download file exists in that particular locaiton...
                   try{
                    dbConnect con = new dbConnect();
                    ProcessFiles data = con.getBlobInfo(attachmentT.getValueAt(attachmentT.getSelectedRow(), 0).toString());
                    
                    //Here is oging to create the file...
                    if(!new File("d:/download/"+ data.getName()).exists())
                    {
                        File f = new File("d:/download/"+ data.getName());
                        data.writeByteArraysToFile("d:/download/" + data.getName(),  data.decodeBase64(data.getBase64(), data.getName()));
                        data.openFile(f);
                    }
                    else{
                        new File("d:/download/"+data.getName()).delete();
                        File f = new File("d:/download/"+ data.getName());
                        data.writeByteArraysToFile("d:/download/" + data.getName(),  data.decodeBase64(data.getBase64(), data.getName()));
                        data.openFile(f);
                    }
                    
                   }catch(Exception error)
                   {
                        JOptionPane.showMessageDialog(null, error);
                   }
                   
               }
           else{
               //Move to c drive//
               
           }
           
          
            this.stopProgressBar();
           return;
        }
            
        
    }//GEN-LAST:event_attachmentTMouseClicked

    private void moreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == more)
        {
            
            JDialog jd = new JDialog();
            
            dialog.saveD.addActionListener(new actionClick());
            jd.getContentPane().add(dialog);
            jd.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
            jd.pack();
            jd.setVisible(true);
            jd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
           
        }
        
    }//GEN-LAST:event_moreActionPerformed

 

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JFormattedTextField alt1;
    private javax.swing.JButton attach;
    private javax.swing.JTable attachmentT;
    public javax.swing.JTextField block;
    public javax.swing.JButton delete;
    public javax.swing.JTextArea description;
    public javax.swing.JTextField fname;
    private javax.swing.JLabel fnameL;
    private javax.swing.JLabel idNumber;
    private javax.swing.JLabel imgIcon;
    public javax.swing.JTextField intersectionT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JTextField lname;
    public javax.swing.JTextField lotnum;
    public javax.swing.JFormattedTextField mainT;
    private javax.swing.JLabel message;
    private javax.swing.JButton more;
    public javax.swing.JButton next;
    public javax.swing.JTextArea notes;
    public javax.swing.JTextField ofname;
    public javax.swing.JTextField olname;
    public javax.swing.JButton previous;
    private javax.swing.JProgressBar progress;
    public javax.swing.JTextField propertyT;
    public javax.swing.JButton save;
    public javax.swing.JTextField streetT;
    public javax.swing.JButton sub;
    public javax.swing.JTextField subdivision;
    public javax.swing.JTextField taxT;
    public javax.swing.JButton userF;
    public javax.swing.JButton zoom;
    // End of variables declaration//GEN-END:variables

 public void setMessage(String m){this.message.setText(m);}
 public void runGeometry(Geometry g)
 {
     
     searchparcel.setObjectId(list.get(position).getId());
     searchparcel.searchGeometry(g);
     boolean run = true;
     
 }
 public void runTaxQuery()
 {
     searchparcel.setObjectId(list.get(position).getId());
     searchparcel.searchTaxId(list.get(position).getTax());
 }
 public void runPropQuery()
 {
     searchparcel.setObjectId(list.get(position).getId());
     searchparcel.searchPropertyId(list.get(position).getProp());
 }
 public void setUpTicket()
 {
     searchparcel.setTicket(this);
     
 }
 public boolean checkObjectid(String id)
 {
     if(list.get(position).getId().equalsIgnoreCase(id))
     {
         return true;
     }
     return false;
 }
 public void setIdText(String id, Graphic in)
 {
     idNumber.setText(id);
     layer.removeAll();
     list.add(new ObjectData(id));
     position = list.size() - 1;
     System.out.println("LIST IS " + list.size());
     System.out.println("POSITION IS " + position);
     list.get(position).setGeometry(in.getGeometry());
     list.get(position).setSymbol(in.getSymbol());
     GraphicsId = layer.addGraphic(in);
 }

 public void subTrackPosition()
 {
     position--;
     if(position < 0)
     {
         position = list.size() - 1;
     }
     
 }
 public void addPosition()
 {
     position++;
 }
 public void goToBegining()
 {
     position = list.size() - 1;
 }
 public void removeLayer()
 {
     layer.removeAll();
     if(list.size() != 0)
     {
         GraphicsId = layer.addGraphic(new Graphic(list.get(position).getGeometry(), list.get(position).getSymbol()));
     }
     
 }
 public void updateList()
 {
     dbConnect con = new dbConnect();
     System.out.println("ID POSITION " + list.get(position).getId());
     if(list.get(position).getUpload())
         if(con.deleteAllAttachemnts(list.get(position).getId()) <= 0)
             JOptionPane.showMessageDialog(null, "Couldn't delete attachments");
    list.remove(position);
 }
 public void refreshForm()
 {
     System.out.println("Size of list " + list.size());
     if(list.isEmpty())
     {
         this.idNumber.setText("Press next to start new record");
         this.fname.setText("");
         this.lname.setText("");
         this.mainT.setText("");
         this.alt1.setText("");
         this.ofname.setText("");
         this.olname.setText("");
         this.subdivision.setText("");
         this.block.setText("");
         this.lotnum.setText("");
         this.taxT.setText("");
         this.propertyT.setText("");
         this.streetT.setText("");
         this.intersectionT.setText("");
         this.description.setText("");
         this.notes.setText("");
         DefaultTableModel dtm = (DefaultTableModel) this.attachmentT.getModel();
         dtm.setRowCount(0);
     }
     else{
         System.out.println("DID I RAN");
         DefaultTableModel dtm = (DefaultTableModel) this.attachmentT.getModel();
         dtm.setRowCount(0);
         this.idNumber.setText(list.get(position).getId());
         this.fname.setText(list.get(position).getFname());
         this.lname.setText(list.get(position).getLname());
         this.mainT.setText(list.get(position).getMainT());
         this.alt1.setText(list.get(position).getAlt1());
         this.ofname.setText(list.get(position).getOfname());
         this.olname.setText(list.get(position).getOlname());
         this.subdivision.setText(list.get(position).getSub());
         this.block.setText(list.get(position).getBlock());
         this.lotnum.setText(list.get(position).getLot());
         this.taxT.setText(list.get(position).getTax());
         this.propertyT.setText(list.get(position).getProp());
         this.streetT.setText(list.get(position).getStreet());
         this.intersectionT.setText(list.get(position).getInter());
         this.description.setText(list.get(position).getBuild());
         this.notes.setText(list.get(position).getNotes());
         //Fectch database to see if there is records to populate the table...
         try{
             downloadAttachments();
         }catch(Exception e)
         {
             
         }
         
        // GraphicsId = layer.addGraphic(new Graphic(list.get(position).getGeometry(), list.get(position).getSymbol()));
     }
     
     //The rest of the form set Text based on the ObjectData information...
 }
 public void packOnce(){progress.setVisible(true); pack(); progress.setVisible(false);}
 public void sendUpdate(boolean f){list.get(position).setFound(f);}
 public void update(){
     list.get(position).setTax(taxT.getText());
     list.get(position).setProp(propertyT.getText());
     list.get(position).setGeometry(searchparcel.getGeometry());
     layer.updateGraphic(this.GraphicsId, searchparcel.getGeometry());
     this.stopProgressBar();
 }
 public void startProgressBar(){ progress.setVisible(true);}
 public void stopProgressBar(){progress.setVisible(false);}
  public void setLayer(ArcGISFeatureLayer l){spartanLayer = l;}
  public Graphic [] getInfo()
  {
   Map<String, Object> attributes = new HashMap<String, Object>();
                    list.get(position).setFullName(list.get(position).getLname() + " " + list.get(position).getFname());
                    list.get(position).setOFullName(list.get(position).getOlname() + " " + list.get(position).getOfname());
                    attributes.put("OBJECTID",  Integer.parseInt(list.get(position).getId()));
                    attributes.put("cfirst_name", list.get(position).getFname());
                    attributes.put("clast_name", list.get(position).getLname());
                    attributes.put("cfull_name", list.get(position).getFullName());
                    attributes.put("telephone_land_line", list.get(position).getMainT());
                    attributes.put("alt_telephone", list.get(position).getAlt1());
                    attributes.put("alt2_telephone", list.get(position).getAlt2());
                    attributes.put("alt3_telephone", list.get(position).getAlt3());
                    attributes.put("alt4_telephone", list.get(position).getAlt4());
                    attributes.put("pfirst_name", list.get(position).getOfname());
                    attributes.put("plast_name", list.get(position).getOlname());
                    attributes.put("pfull_name", list.get(position).getOFullName());
                    attributes.put("subdivision", list.get(position).getSub());
                    attributes.put("block_num", list.get(position).getBlock());
                    attributes.put("lot_num", list.get(position).getLot());
                    attributes.put("tax_account_num", list.get(position).getTax());
                    attributes.put("property_id", list.get(position).getProp());
                    attributes.put("street", list.get(position).getStreet());
                    attributes.put("intersection", list.get(position).getInter());
                    attributes.put("building_description", list.get(position).getBuild());
                    attributes.put("comments", list.get(position).getNotes());
                    attributes.put("status", "ADDRESSING");
                    Graphic first = new Graphic(list.get(position).getGeometry(), list.get(position).getSymbol(), attributes);
                    Graphic [] up = {first};   
                    return up;
  }
  public void downloadAttachments() throws Exception
  {
      dbConnect con = new dbConnect();
      ArrayList<String[]> table = con.getAttachmentsInfo(list.get(position).getId());
      ProcessFiles pro = new ProcessFiles();
      if(table.size() > 0)//Greater than one add to the table...
      {
          table.stream().map((table1) -> {
              pro.setType(table1[2]);
              return table1;
          }).forEach((table1) -> {
              model.addRow(new Object[]{table1[0], table1[1], table1[2], pro.getImage()});
          });
           
      }
  }
   private class actionClick extends AbstractAction{

        @Override
        public void actionPerformed(ActionEvent e) {
            
            if(e.getSource() == attach)
            {
                startProgressBar();
                
                javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
                int returnValue = fileChooser.showOpenDialog(null);
                if(returnValue == JFileChooser.APPROVE_OPTION)
                {
                    try
                    {
                       final long startTime = System.currentTimeMillis();
                    ProcessFiles files = new ProcessFiles(fileChooser.getSelectedFile());
                    dbConnect con = new dbConnect();
                    System.out.println("Id is " + list.get(position).getId());
                    list.get(position).setStartedUpload(true);
                    //Lets Start a thread to test speed... but first with out thread
                    //Thread t = new Thread
                    int num = con.insertAttachments(list.get(position).getId(), files);
                    System.out.println("CHECK WHAT NUMBER RETURNS " + num);
                    final long endTime = System.currentTimeMillis();
                    System.out.println("Total execution time: " + (endTime - startTime));
                   // Vector newRow = new Vector();
                    if(num > 0)
                        model.addRow(new Object[]{con.getFiles().getId(), con.getFiles().getName(), con.getFiles().getType(), con.getFiles().getImage()});
                    else
                        JOptionPane.showMessageDialog(null, "Sorry can't upload to big of a file even with compression");
                    //jTable1.addR
                    }catch(Exception t)
                    {
                        stopProgressBar();
                         JOptionPane.showMessageDialog(null, t);   
                    }
                }
                
                stopProgressBar();
                return;
            }
            else if(e.getSource() == dialog.saveD)
            {
                list.get(position).setAlt2(dialog.alt1.getText());
                list.get(position).setAlt3(dialog.alt2.getText());
                list.get(position).setAlt4(dialog.alt3.getText());
           
        }
   }
 }
 
      
  
}
